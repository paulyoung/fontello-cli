// Generated by CoffeeScript 1.6.3
(function() {
  var colors, config, dirIsValid, fontello, fs, mkdirp, path, pjson, program;

  colors = require('colors');

  fs = require('fs');

  mkdirp = require('mkdirp');

  path = require('path');

  util = require('util');

  pjson = require(path.join(__dirname, '..', 'package.json'));

  program = require('commander');

  fontello = require(path.join(__dirname, '..', 'lib', 'fontello'));

  dirIsValid = function(path) {
    var e;
    try {
      return fs.statSync(path).isDirectory();
    } catch (_error) {
      e = _error;
      mkdirp.sync(path);
      return true;
    }
  };

  config = 'config.json';

  program.version(pjson.version).usage('[command] [options]').option('--config [path]', 'path to fontello config. defaults to ./config').option('--css [path]', 'path to css directory (optional). if provided, --font option is expected.').option('--font [path]', 'path to font directory (optional). if provided, --css option is expected.');

  program.command('install').description('download fontello. without --css and --font flags, the full download is extracted.').action(function(env, options) {
    if (program.css && program.font) {
      if (!dirIsValid(program.css)) {
        util.print('--css path provided is not a directory.\n'.red);
        process.exit(1);
      }
      if (!dirIsValid(program.font)) {
        util.print('--font path provided is not a directory.\n'.red);
        process.exit(1);
      }
    }
    return fontello.install({
      config: program.config || config,
      css: program.css,
      font: program.font
    });
  });

  program.command('open').description('open the fontello website with your config file preloaded.').action(function(env, options) {
    return fontello.open({
      config: program.config || config
    });
  });

  program.parse(process.argv);

}).call(this);
